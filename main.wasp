app ContactManager {
  wasp: {
    version: "^0.16.3"
  },
  title: "ContactManager",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

action createContact {
  fn: import { createContact } from "@src/actions.js",
  entities: [Contact]
}

action updateContact {
  fn: import { updateContact } from "@src/actions.js",
  entities: [Contact]
}

action deleteContact {
  fn: import { deleteContact } from "@src/actions.js",
  entities: [Contact]
}

action uploadContacts {
  fn: import { uploadContacts } from "@src/actions.js",
  entities: [Contact, User]
}

query getContacts {
  fn: import { getContacts } from "@src/queries.js",
  entities: [Contact]
}

query getLabels {
  fn: import { getLabels } from "@src/queries.js",
  entities: [Label]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}

route ContactRoute { path: "/contact/:contactId", to: ContactPage }
page ContactPage {
  component: import ContactPage from "@src/pages/Contact.jsx",
  authRequired: true
}
